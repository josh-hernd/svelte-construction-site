$fontBreakpoints: (
	small: 480px,
	medium: 700px,
	large: 1024px
);

// Responsive Typography Mixin
@mixin font-size($fs-map, $fs-breakpoints: $fontBreakpoints) {
	@each $fs-breakpoint, $fs-font-size in $fs-map {
		@if $fs-breakpoint == null {
			@include gen-font-size($fs-font-size);
		} @else {
			@if map-has-key($fs-breakpoints, $fs-breakpoint) {
				$fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
			}
			@media screen and (min-width: $fs-breakpoint) {
				@include gen-font-size($fs-font-size);
			}
		}
	}
}

// Utility function
@mixin gen-font-size($fs-font-size) {
	@if type-of($fs-font-size) == 'list' {
		font-size: nth($fs-font-size, 1);
		@if (length($fs-font-size) > 1) {
			line-height: nth($fs-font-size, 2);
		}
	} @else {
		font-size: $fs-font-size;
	}
}

@mixin dynamicpoint($min: all, $max: all) {
	@if ($min == all) {
		@media (max-width: $max) {
			@content;
		}
	} @else if ($max == all) {
		@media (min-width: $min) {
			@content;
		}
	} @else {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	}
}
